#!/usr/bin/env python3

import subprocess
from pathlib import Path
import re


def _get_main_branch() -> str:
    return (
        subprocess.check_output(
            ["git", "symbolic-ref", "refs/remotes/origin/HEAD"], encoding="utf-8"
        )
        .strip()
        .removeprefix("refs/remotes/origin/")
    )


def main():
    branches = subprocess.check_output(["git", "branch", "-v"], encoding="utf-8").split(
        "\n"
    )
    for branch_line in branches:
        if "[gone]" not in branch_line:
            continue

        index = 0 if branch_line[0] == " " else 1
        branch_name = branch_line.split()[index]
        print(f"Deleting {branch_name}")
        try:
            subprocess.check_output(
                ["git", "branch", "-D", branch_name],
                stderr=subprocess.PIPE,
                encoding="utf-8",
            )
        except subprocess.CalledProcessError as e:
            m = re.search(r"used by worktree at '(.*?)'", e.stderr)
            if not m:
                raise Exception(f"Failed deleting {branch_name}: {e.stderr}")

            worktree = Path(m.group(1))
            print(f"Deleting worktree {worktree}")

            if (worktree / ".git").is_file():
                subprocess.check_call(
                    ["git", "worktree", "remove", "--force", worktree.as_posix()]
                )
            else:
                subprocess.check_call(["git", "reset", "HEAD", "--hard"], cwd=worktree)
                subprocess.check_call(
                    ["git", "checkout", _get_main_branch()], cwd=worktree
                )

            subprocess.check_call(
                ["git", "branch", "-D", branch_name],
                stderr=subprocess.PIPE,
                encoding="utf-8",
            )


if __name__ == "__main__":
    main()
